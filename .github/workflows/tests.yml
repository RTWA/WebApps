name: WebApps Tests

on:
  push:
    branches:
      - develop
      - 'release/**'
  pull_request:
    branches: [develop]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    name: PHP ${{ matrix.php }}
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        php: [7.4, 8.0]

    steps:
      - name: Start MySQL service
        run: |
          sudo systemctl start mysql.service
          sudo apt-get install -y mysql-client
          sudo mysql --host 127.0.0.1 --port 3306 -uroot -proot -e "SHOW DATABASES"
      - name: Create database
        run: sudo mysql --host 127.0.0.1 --port 3306 -uroot -proot -e "CREATE DATABASE webapps"
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.github', '.env');"
      - name: Install Dependencies
        run: |
          sudo composer self-update
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate a new key
        run: php artisan key:generate --env=github
      - name: Set File & Directory Permissions
        run: |
          chmod -R 775 storage bootstrap/cache
          chmod 666 .env
      - name: Compile assets
        run: |
          npm install
          npm run production
      - name: Test Coding Standards
        run: vendor/bin/phpcs
      - name: Run Unit Tests
        run: php artisan test --coverage-clover=coverage.xml --env=github
      - name: Upload Unit coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests,${{ matrix.php }}
          name: codecov-umrella
          fail_ci_if_error: true
      - name: Run UI Tests
        run: npm run test-coverage
      - name: Upload UI coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          flags: uitests
          name: codecov-umrella
          fail_ci_if_error: true
      
